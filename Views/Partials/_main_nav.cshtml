@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    var logo_img_url = "";
    var rootNode = CurrentPage.AncestorsOrSelf(1).First();
}
<!-- Main Nav -->
        <div class="main_nav clearfix" id="main_navigation">
            <div class="full-screen-container">
                <!-- Mobile Menu Component -->
                <div class="mobile-menu hidden-lg">
                    <!--
                    <button type="button" role="button" aria-label="Toggle Navigation" class="lines-button arrow arrow-left pull-right visible-lg">
                      <span class="lines"></span>
                    </button>-->

                    <button type="button" class="navbar-toggle collapsed pull-left lines-button arrow-left" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar" id="nav-button">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                </div>

                <!-- logo -->
                @if(rootNode.HasValue("logo")){
                    var dynamicMediaItem = Umbraco.Media(rootNode.logo);
                    logo_img_url = dynamicMediaItem.umbracoFile;
                }
                <div class="rotating_logo_div logo left visible-lg">
                    <a href="\" class="rotate_logo clearfix" id="rotate_logo_trigger">
                        <img src="@logo_img_url" id="rotate_logo" />
                        <div class="logo_text">
                            <span class="white">Melbourne</span>
                            <span class="green">Star</span>
                        </div>
                    </a>
                </div>
                <div class="logo inline-block left hidden-lg" id="logo">
                    <a href="#" class="logo_span"></a>
                </div>

                <!-- ticket -->
                <div class="buy_tickets inline-block right visible-lg">
                    <span class="uppercase"><a href="https://online.melbournestar.com/e-commerce/">@rootNode.ticketButtonTitle</a></span>
                </div>


                <!-- main navbar -->
                <nav class="navbar inline-block pull-right visible-lg" id="main_nav">
                    <ul class="nav navbar-nav level-1">
                        <li class="root">
                            <a href="\">
                                <span class="menu--link-text current-parent">Home</span>
                            </a>
                        </li>
                        @foreach (var childPage in rootNode.Children)
                        {
                            if (childPage.Children.Any() && (!childPage.hideDescendantInNav))
                            {

                                <li class="root dropdown has-child @(childPage.IsAncestorOrSelf(CurrentPage) ? "selected" : null)">
                                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                                        <span class="menu--link-text current-parent">@childPage.Name</span>
                                        <span class="arrow_down"></span>
                                    </a>
                                    @childPages(childPage.Children)
                                </li>
                            }
                            else
                            {
                                if (!childPage.hideInNav) {
                                <li class="root @(childPage.IsAncestorOrSelf(CurrentPage) ? "selected" : null)">
                                    <!-- Link tag only if link is present in backend -->
                                    <a class="dropdown-toggle menu--link" href="@childPage.Url">
                                        <!-- END IF -->
                                        <span class="menu--link-text current-parent">@childPage.Name</span>
                                        <!-- Control to use: -->
                                        <i class="icon menu--icon "></i>
                                    </a>
                                </li>
                                }
                            }
                        }
                    </ul>
                </nav>
            </div>
        </div>
        <!-- End of Main Nav -->

@helper childPages(dynamic pages)
{
    @* Ensure that we have a collection of pages *@
    if (pages.Any())
    {
        @* Get the first page in pages and get the level *@
    var naviLevel = pages.First().Level;

        @* Add in level for a CSS hook *@
        <ul class="dropdown-menu level-2">
            @foreach (var page in pages)
            {
                if(!page.hideInNav) { 
                    <li>
                        <a href="@page.Url">@page.Name</a>

                        @* if the current page has any children *@
                        @if (page.Children.Any() && (!page.hideDescendantInNav))
                        {
                            @* Call our helper to display the children *@
                            @childPages(page.Children)
                        }
                    </li>
                }
            }
        </ul>
    }
}